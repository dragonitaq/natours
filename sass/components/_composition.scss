.composition {
  display: grid;
  grid-template-columns: repeat(3, 0.5fr);

  @include respond(tab-port) {
    margin-top: 7rem;
    margin-bottom: 13rem;
  }

  &__photo {
    display: inline-block;
    width: 150%;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
    /* I found out you can only use relative position within grid, not absolute position. This way, we no need set its parent's position to relative. Using this technique, fr unit no long work. 
    But I found some web demo showing that we can use absolute position within grid area. How come? */
    position: relative;
    outline-offset: 2rem;
    transition: all 0.2s;

    @include respond(tab-port) {
      width: 100%;
    }

    &--p1 {
      top: -2rem;
      left: 6rem;
      @include respond(tab-port) {
        top: 0;
        left: 3.5rem;
      }
    }

    &--p2 {
      top: 3rem;
      left: 8rem;
      @include respond(tab-port) {
        top: 0;
        left: 0;
        transform: translateY(-15%);
        z-index: 1;
      }
    }

    &--p3 {
      top: 10rem;
      left: -21rem;
      @include respond(tab-port) {
        top: 0;
        left: -3.5rem;
      }
    }

    &:hover {
      outline: 1.5rem solid $color-primary;
      transform: scale(1.05) translateY(-0.5rem);
      /* We increase the shadow because when it is hover, it should case bigger & darker shadow to create pop-up effect. */
      box-shadow: 0 2.5rem 4rem rgba($color-black, 0.5);
      z-index: 2;
    }
  }
  // This code has no effect at all.
  &:hover &__photo:not(:hover) {
    transform: scale(0.95);
  }
}

// .composition {
//     position: relative;

//     &__photo {
//         /* Is best practice to define image width in percentage in order to achieve better responsive design. Because this way, it will scale better according to the viewport. */
//         width: 55%;
//         box-shadow: 0 1.5rem 4rem rgba($color-black, .4);
//         border-radius: 2px;
//         position: absolute;
//         z-index: 10;
//         transition: all .2s;
//         /* This will set apart between border and its content with space defined.
//         Why we use outline instead of border? Because if we use border, then we need  padding in this case, but those images will shrink and that's not what we want in this effect. So, a better option is outline, so we can handle the space between content and outline.*/
//         outline-offset: 2rem;

//         &--p1 {
//             left: 0;
//             top: -2rem;
//         }

//         &--p2 {
//             right: 0;
//             top: 2rem;
//         }

//         &--p3 {
//             left: 20%;
//             top: 10rem;
//         }

//         &:hover {
//             outline: 1.5rem solid $color-primary;
//             transform: scale(1.05) translateY(-.5rem);
//             /* We increase the shadow because when it is hover, it should case bigger & darker shadow to create pop-up effect. */
//             box-shadow: 0 2.5rem 4rem rgba($color-black, .5);
//             z-index: 20;
//         }

//     }

//     &:hover &__photo:not(:hover) {
//         transform: scale(.95);
//     }
//     //composition:hover composition__photo:not(:hover)
// }
