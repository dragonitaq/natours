.section-about {
  background-color: $color-grey-light-1;
  /* To move this seciton up relative to the viewport because we want to fill up the header section above. */
  margin-top: -20vh;
  /* Since we moved up, we have to set larger padding to white space between 2 sections. */
  padding: 25rem 0;

  @include respond(tab-port) {
    padding: 25rem 5rem 15rem;
  }
}

.about-grid {
  display: flex;
  padding: 0 12rem;

  @include respond(tab-port) {
    flex-wrap: wrap;
  }
}

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem;

  /* We only want to skew the direct child, if we skew all subsequent childs, all things will go weird. */
  & > * {
    transform: skewY(7deg);
  }
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
  gap: 4rem;
  padding: 0 10rem;

  /* Grid is better than flex in this case because of its native auto media query. */
  // display: flex;
  // padding: 0 10rem;
  // &>:not(:last-child) {
  //   margin-right: 4rem;
  // }
}

.section-tours {
  background-color: $color-grey-light-1;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem;

  @include respond(tab-port) {
    padding: 20rem 0 10rem 0;
  }
}

.tours-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(27rem, 1fr));
  gap: 4rem;
  padding: 0 10rem;
}

.section-stories {
  position: relative;
  padding: 15rem 0;

  @include respond(tab-port) {
    padding: 8rem 0;
  }
  @include respond(phone) {
    padding: 8rem 5rem;
  }
}

.section-book {
  padding: 15rem 10rem;
  background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
}

.book {
  /* Here we use color gradient to produce different gradient angles & fading percentage.
  The 105 degree is the rotation degree calculated base on the center point of the container.
  The percentage is calculated base on where the angle started at 0% until 100%.
  We can have multiple colors in place together at different fading percentage point. */
  background-image: linear-gradient(105deg, rgba($color-white, 0.9) 0%, rgba($color-white, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  /* Setting 100% produces same effect as setting it to cover, which means stretch the image to occupy the entire container. */
  background-size: cover;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba($color-black, 0.2);

  @include respond(tab-land) {
    background-image: linear-gradient(105deg, rgba($color-white, 0.9) 0%, rgba($color-white, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
  }

  @include respond(tab-port) {
    background-image: linear-gradient(to right, rgba($color-white, 0.9) 100%, rgba($color-white, 0.9) 100%, transparent 100%), url(../img/nat-10.jpg);
  }

  &__form {
    width: 50%;
    padding: 6rem;

    @include respond(tab-land) {
      width: 65%;
    }

    @include respond(tab-port) {
      width: 100%;
    }
  }
}
